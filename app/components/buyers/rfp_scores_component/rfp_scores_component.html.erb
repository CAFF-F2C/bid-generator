<div class= 'rfp-scores' id='rfp_scores'>
  <%= render(FormErrorsComponent.new(errors: errors.uniq, scope: :complete)) %>
  <% scores.each do |score|%>
    <%= form_for [:buyers, @current_rfp, score], data: { controller: 'auto-submit', auto_submit_delay_value: '1000' } do |f| %>
      <div
        id="score_category_<%= score.score_category_id %>"
        class="rfp-scores__score <%= (score.errors.present?) ? 'rfp-scores__score--errors' : ''%>"
      >
        <div class='rfp-scores__category' data-action='click->buyers--rfp-scores-component--rfp-scores#click' data-category-id="<%=score.score_category_id%>">
          <%= f.label "value_#{score.score_category_id}", score.name, class: 'rfp-scores__name' %>
          <p class='rfp-scores__description hidden'><%= score.description %></p>
        </div>
        <div class='rfp-scores__value'>
          <%= f.hidden_field :score_category_id %>
          <%= f.number_field :value, min: 0, max: 100, id: "score_value_#{score.score_category_id}", data: { action: 'auto-submit#submit' }, :autofocus => current_score?(score.id), class: 'text-field' %>
        </div>
      </div>
    <% end %>
  <% end %>

  <div class="rfp-scores__total-score rfp-scores__score <%= (errors[:base].present?) ? 'rfp-scores__score--errors' : ''%>">
    <div class='rfp-scores__category'>
    </div>
    <div class='rfp-scores__value'>
      <div id='rfp_total_score' class='rfp-scores__total'>Total: <%= total_score %></div>
    </div>
  </div>
</div>
